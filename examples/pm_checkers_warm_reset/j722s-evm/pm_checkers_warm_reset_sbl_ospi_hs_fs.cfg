#-----------------------------------------------------------------------------#
#                                                                             #
#      DEFAULT CONFIGURATION FILE TO BE USED WITH THE FLASHWRITER SCRIPT      #
#                                                                             #
#-----------------------------------------------------------------------------#
#
# By default this config file,
# - points to pre-built flash writer, bootloader for this EVM
# - The application image points to relative path of the ipc rpmsg linux application image for this EVM
#   - Make sure this application is built before running this script
# - You can customized this config file to point to your own bootloader and/or application images
# - You can use --operation=flashverify if you just want to verify the flash contents and not flash the file.
#
# Flash command : python uart_uniflash.py -p {name of your main UART com port} --cfg={path to your edited config file}
#

--flash-writer=sbl_prebuilt/j722s-evm/sbl_uart_uniflash.release.hs_fs.tiimage

# Program the OSPI PHY tuning attack vector
--operation=flash-phy-tuning-data

# Now send one or more files to flash or flashverify as needed. The order of sending files does not matter

# When sending bootloader make sure to flash at offset 0x0. ROM expects bootloader at offset 0x0
--file=sbl_prebuilt/j722s-evm/sbl_ospi.release.hs_fs.tiimage --operation=flash --flash-offset=0x0

# Change the following image with your application
--file=../../source/safety_checkers/examples/pm_checkers_warm_reset/j722s-evm/mcu-r5fss0-0_freertos/ti-arm-clang/SafetyCheckersApp_pmWarmReset.release.appimage.hs_fs --operation=flash --flash-offset=0x80000

